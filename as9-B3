#include<iostream.h>
#include<conio.h>

template <class T>
class Vector {
    T *arr;
    int size;

public:
    Vector(int s) {
        size = s;
        arr = new T[size];
    }

    void create() {
        cout << "Enter " << size << " elements:\n";
        for (int i = 0; i < size; i++) {
            cout << "Element " << i + 1 << ": ";
            cin >> arr[i];
        }
    }

    void modify(int index, T value) {
        if (index >= 0 && index < size) {
            arr[index] = value;
        } else {
            cout << "Invalid index!\n";
        }
    }

    void multiply(T scalar) {
        for (int i = 0; i < size; i++) {
            arr[i] *= scalar;
        }
    }

    void display() {
        cout << "(";
        for (int i = 0; i < size; i++) {
            cout << arr[i];
            if (i < size - 1)
                cout << ", ";
        }
        cout << ")\n";
    }

    ~Vector() {
        delete[] arr;
    }
};

void main() {
    clrscr();

    int size;
    cout << "Enter size of vector: ";
    cin >> size;

    Vector<int> v(size);
    v.create();

    cout << "\nOriginal Vector: ";
    v.display();

    int index, newVal;
    cout << "\nEnter index to modify (0 to " << size - 1 << "): ";
    cin >> index;
    cout << "Enter new value: ";
    cin >> newVal;
    v.modify(index, newVal);

    cout << "\nVector after modification: ";
    v.display();

    int scalar;
    cout << "\nEnter scalar value to multiply: ";
    cin >> scalar;
    v.multiply(scalar);

    cout << "\nVector after scalar multiplication: ";
    v.display();

    getch();
}
